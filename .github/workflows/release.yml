---
name: Create Release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    name: Create Release
    # only runs on main
    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # GET VERSION TAG
      - name: Get latest version number
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      # CHECKOUT CODE
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.vars.outputs.tag }}
      # INSTALL GOLANG
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      # BUILD THE BINARY
      - name: Build
        run: |
          go build .
      # CREATE RELEASE
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      # UPLOAD BINARY
      - name: Upload Release deb
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./badges
          asset_name: badges
          asset_content_type: application/octet-stream